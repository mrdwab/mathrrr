% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fractions.R
\name{parse_fraction}
\alias{parse_fraction}
\title{Parse a String as a Fraction}
\usage{
parse_fraction(string, improper = TRUE, reduce = TRUE)
}
\arguments{
\item{string}{The input character to be parsed.}

\item{improper}{Logical. Should the result be kept as an improper fraction?
Defaults to \code{TRUE}.}

\item{reduce}{Logical. Should unreduced fractions be simplified? Defaults
to \code{TRUE}.}
}
\value{
A formatted \code{list} printed with \code{print.fraction()}. The \code{list}
includes four elements:
\itemize{
\item \code{whole}: The absolute value of the whole number part of the decimal. This
is \code{NULL} if \code{improper = TRUE}.
\item \code{numerator}: The numerator of the resulting fraction.
\item \code{denominator}: The denominator of the resulting fraction.
\item \code{sign}: \code{-1} if the input is negative; \code{1} if the input is positive.
}
}
\description{
Parse a String as a Fraction
}
\note{
The string can be entered either as an improper fraction
(for example, \code{"5/2"}) or as a proper fraction (for example,
\code{"2 1/2"}). Depending on how it is entered, the resulting \code{list}
will have a value in \code{"whole"} or \code{"whole"} will be \code{NULL}.
}
\examples{
parse_fraction("4/4")
parse_fraction("4/4", reduce = FALSE)

parse_fraction("32/4")
parse_fraction("34/4", reduce = FALSE)
parse_fraction("34/4", reduce = TRUE)
parse_fraction("34/4", improper = FALSE)

parse_fraction("4 2/4")
parse_fraction("4 2/4", TRUE, FALSE)
parse_fraction("4 2/4", FALSE)
}

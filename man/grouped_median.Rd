% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouped_functions.R
\name{grouped_median}
\alias{grouped_median}
\title{Calculate the Median of Already Grouped Data}
\usage{
grouped_median(frequencies, intervals, sep = NULL, trim = NULL)
}
\arguments{
\item{frequencies}{A vector of frequencies.}

\item{intervals}{A 2-column \code{matrix} with the same number of rows as
the length of frequencies, with the first column being the lower class
boundary, and the second row being the upper class boundary. Alternatively,
\code{intervals} may be a character vector, and you may specify \code{sep} (and
possibly, \code{trim} function automatically create the required \code{matrix}.}

\item{sep}{Optional character that separates lower and uppper class
boundaries if \code{intervals} is entered as a character vector.}

\item{trim}{Optional leading or trailing characters to trim from the
character vector being used for \code{intervals}. There is one in-built pattern
in \code{grouped_median} to trim the breakpoint labels created by \code{\link[base:cut]{base::cut()}}.
If you are using \code{grouped_median} on the output of \code{cut} (where, for some
reason, you no longer have access to the original data), you can use
\code{trim = "cut"}.}
}
\value{
A single numeric value representing the grouped median.
}
\description{
Calculates the median of already grouped data given the interval ranges and
the frequencies of each group.
}
\note{
The following forumla is used to calculate the grouped median:

\deqn{M = L +\frac{\frac{n}{2}-cf}{f} \times c}{M = L + (n/2 - cf)/f * c}
\itemize{
\item L = The lower boundary of the median class
\item n = The sum of the frequencies
\item cf = The cumulative frequency of the class below the median class
\item f = The frequency of the median class
\item c = The length of the median class
}
}
\examples{

mydf <- structure(list(salary = c("1500-1600", "1600-1700", "1700-1800",
        "1800-1900", "1900-2000", "2000-2100", "2100-2200", "2200-2300",
        "2300-2400", "2400-2500"), number = c(110L, 180L, 320L, 460L,
        850L, 250L, 130L, 70L, 20L, 10L)), .Names = c("salary", "number"),
        class = "data.frame", row.names = c(NA, -10L))
mydf

with(mydf, grouped_median(frequencies = number, intervals = salary, sep = "-"))

## Example with intervals manually specified
Freq <- mydf$number
X <- cbind(c(1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400),
           c(1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500))

grouped_median(Freq, X)

# Using `cut`
set.seed(1)
x <- sample(100, 100, replace = TRUE)
y <- data.frame(table(cut(x, 10)))

with(y, grouped_median(Freq, Var1, sep = ",", trim = "cut"))

}
